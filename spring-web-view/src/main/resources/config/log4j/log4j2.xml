<?xml version="1.0" encoding="UTF-8" ?>
<!--日志级别：TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<Configuration status="WARN" monitorInterval="30"
	xmlns="http://logging.apache.org/log4j/2.0/config" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://logging.apache.org/log4j/2.0/config 
           https://raw.githubusercontent.com/apache/logging-log4j2/log4j-2.8.2/log4j-core/src/main/resources/Log4j-config.xsd">
           
	<Properties>
		<Property name="LOG_HOME">logs</Property>
		<Property name="FILE_NAME">log</Property>
	</Properties>
	<!-- 定义Appender -->
	<Appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="DEBUG" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!--输出日志的格式 -->
			<!-- %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间,输出到毫秒的时间 %-5level : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0 
				%c : logger的名称(%logger) %t : 输出当前线程名称 %p : 日志输出格式 %m : 日志内容，即 logger.info("message") 
				%n : 换行符 %C : Java类名(%F) %L : 行号 %M : 方法名 %l : 输出语句所在的行数, 包括类名、方法名、文件名、行数 
				hostName : 本地机器名 hostAddress : 本地ip地址 -->
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %10t [%p] %m %l%n"></PatternLayout>
		</console>
		<!-- 循环日志文件 -->
		<!-- Info级别 -->
		<RollingRandomAccessFile name="INFO"
			fileName="${LOG_HOME}/${FILE_NAME}-info.log" filePattern="${LOG_HOME}/${FILE_NAME}_%d{yyyy-MM-dd}_%i.infolog.gz">
			<Filters>
				<ThresholdFilter level="WARN" onMatch="DENY"
					onMismatch="NEUTRAL"></ThresholdFilter>
				<ThresholdFilter level="INFO" onMatch="ACCEPT"
					onMismatch="DENY"></ThresholdFilter>
			</Filters>
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %C.%M(%L) %m%n"></PatternLayout>
			<Policies>
				<TimeBasedTriggeringPolicy interval="1"></TimeBasedTriggeringPolicy>
				<SizeBasedTriggeringPolicy size="100M"></SizeBasedTriggeringPolicy>
			</Policies>
			<DefaultRolloverStrategy max="1000"></DefaultRolloverStrategy>
		</RollingRandomAccessFile>
		<!-- Error级别 -->
		<RollingRandomAccessFile name="ERROR"
			fileName="${LOG_HOME}/${FILE_NAME}-error.log" filePattern="${LOG_HOME}/${FILE_NAME}_%d{yyyy-MM-dd}_%i.errorlog.gz">
			<Filters>
				<ThresholdFilter level="FATAL" onMatch="DENY"
					onMismatch="NEUTRAL"></ThresholdFilter>
				<ThresholdFilter level="WARN" onMatch="ACCEPT"
					onMismatch="DENY"></ThresholdFilter>
			</Filters>
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %C.%M(%L) %m%n"></PatternLayout>
			<Policies>
				<TimeBasedTriggeringPolicy interval="1"></TimeBasedTriggeringPolicy>
				<SizeBasedTriggeringPolicy size="100M"></SizeBasedTriggeringPolicy>
			</Policies>
			<DefaultRolloverStrategy max="1000"></DefaultRolloverStrategy>
		</RollingRandomAccessFile>
		<!-- Debug级别及以上 -->
		<RollingRandomAccessFile name="ALL"
			fileName="${LOG_HOME}/${FILE_NAME}.log" filePattern="${LOG_HOME}/${FILE_NAME}_%d{yyyy-MM-dd}_%i.log.gz">
			<Filters>
				<ThresholdFilter level="FATAL" onMatch="DENY"
					onMismatch="NEUTRAL"></ThresholdFilter>
				<ThresholdFilter level="DEBUG" onMatch="ACCEPT"
					onMismatch="DENY"></ThresholdFilter>
			</Filters>
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %C.%M(%L) %m%n"></PatternLayout>
			<Policies>
				<TimeBasedTriggeringPolicy interval="1"></TimeBasedTriggeringPolicy>
				<SizeBasedTriggeringPolicy size="100M"></SizeBasedTriggeringPolicy>
			</Policies>
			<DefaultRolloverStrategy max="1000"></DefaultRolloverStrategy>
		</RollingRandomAccessFile>
		<!-- 配置异步写日志 -->
		<Async name="Async">
			<AppenderRef ref="ALL"></AppenderRef>
		</Async>
		<!-- 输出到MongoDB中 -->
		<!--建议bufferSize配置,减少频繁写操作。 -->
		<NoSql name="databaseAppender">
			<MongoDb databaseName="test" collectionName="logs" server="localhost"
				port="27017"></MongoDb>
			
		</NoSql>
		<Console name="SQLLog" target="SYSTEM_OUT">
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %10t [%p] %m %l%n"></PatternLayout>
		</Console>
	</Appenders>

	<!-- 定义Logger -->
	<!-- 只有定义了logger并引入的appender，appender才会生效 -->
	<Loggers>
		<Logger name="com.wang.jar.mapper" level="DEBUG" additivity="false">
			<AppenderRef ref="SQLLog"></AppenderRef>
		</Logger>
		<Logger name="org.dozer" level="info" additivity="false"></Logger>
		<Logger name="org.apache.commons.beanutils.converters" additivity="false" level="info"></Logger>
		<!--监控系统信息 -->
		<Logger name="org.springframework" level="info" additivity="false">
			<AppenderRef ref="Console"></AppenderRef>
		</Logger>
		<!--输出到NoSQL中 -->
		<Logger name="mongoLog" level="INFO" additivity="false">
			<AppenderRef ref="databaseAppender"></AppenderRef>
		</Logger>
		<Root level="debug">
			<AppenderRef ref="Console"></AppenderRef>
			<AppenderRef ref="INFO"></AppenderRef>
			<AppenderRef ref="ERROR"></AppenderRef>
			<AppenderRef ref="ALL"></AppenderRef>
		</Root>
	</Loggers>
</Configuration>