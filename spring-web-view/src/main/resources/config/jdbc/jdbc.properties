########################	常用链接配置	########################

#传递给JDBC驱动的用于建立连接的用户名
username=root
#传递给JDBC驱动的用于建立连接的密码
password=wang
#传递给JDBC驱动的用于建立连接的URL
url= jdbc:mysql://127.0.0.1:3306?characterEncoding=utf8&allowMultiQueries=true&serverTimezone=UTC
#使用的JDBC驱动的完整有效的java 类名
#6.0之前的驱动
#driverClassName=com.mysql.jdbc.Driver
#6.0之后的数据库驱动
driverClassName=com.mysql.cj.jdbc.Driver



########################	数据源连接数量配置	########################

#初始化连接:连接池启动时创建的初始化连接数量,1.2版本后支持
initialSize=3
#最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为非正数则表示不限制
maxTotal=15
#最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,如果设置为负数表示不限制
maxIdle=15
#最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,如果设置为0则不创建
minIdle=3
#最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),超过时间则抛出异常,如果设置为-1表示无限等待
maxWaitMillis=5000



########################	事务属性配置	########################

#连接池创建的连接的默认的auto-commit状态
#defaultAutoCommit=
#连接池创建的连接的默认的read-only状态. 如果没有设置则setReadOnly方法将不会被调用.(某些驱动不支持只读模式,比如:Informix)
#defaultReadOnly=
#连接池创建的连接的默认的TransactionIsolation状态.
#defaultTransactionIsolation=
#连接池创建的连接的默认的catalog
#defaultCatalog=
#缓存状态
#cacheState=
#查询超时时间
#defaultQueryTimeout
#连接归还到池时，设置为自动提交
#enableAutocommitOnReturn
#连接归还到池时，回滚所有操作
#rollbackOnReturn



########################	数据源连接健康状况检查	########################

#SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录
validationQuery=select 1
#确认查询SQL的超时时间
#validationQueryTimeout
#连接创建后，马上验证有效性
#testOnCreate
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
testOnBorrow=false
#指明是否在归还到池中前进行检验.
testOnReturn=false
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
testWhileIdle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位.如果设置为非正数,则不运行空闲连接回收器线程
timeBetweenEvictionRunsMillis=120000
#在每次空闲连接回收器线程(如果有)运行时检查的连接数量
numTestsPerEvictionRun=-1
#连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值，单位毫秒
minEvictableIdleTimeMillis=1800000



########################	缓存语句	########################

#开启池的prepared statement 池功能
#poolPreparedStatements=
#statement池能够同时分配的打开的statements的最大数量, 如果设置为0表示不限制
#maxOpenPreparedStatements=



########################	连接泄露回收	########################

#标记是否删除泄露的连接,如果他们超过了removeAbandonedTimout的限制.如果设置为true, 
#连接被认为是被泄露并且可以被删除,如果空闲时间超过removeAbandonedTimeout. 设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接.
#泄露的连接可以被删除的超时值, 单位秒
#标记当Statement或连接被泄露时是否打印程序的stack traces日志。被泄露的Statements和连接的日志添加在每个连接打开或者生成新的Statement,因为需要生成stack trace。

